plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow' version "${shadowPluginVersion}"
    id 'com.google.cloud.tools.jib' version "${jibPluginVersion}"
}

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'

mainClassName = 'com.omarsmak.kafka.consumer.lag.monitoring.MainKt'

shadowJar {
    zip64 = true
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compile project(':monitoring-client')

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile "io.prometheus:simpleclient:$prometheusVersion"
    compile "io.prometheus:simpleclient_hotspot:$prometheusVersion"
    compile "io.prometheus:simpleclient_httpserver:$prometheusVersion"
    compile "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"
    compile "com.github.ajalt:mordant:$mordantVersion"
    compile "info.picocli:picocli:$picocliVersion"
    compile "org.slf4j:slf4j-simple:$slf4jVersion"
    compile "com.uchuhimo:konf:$konfVersion"
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'



    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
}

test {
    useJUnitPlatform()
}

shadowJar {
    zip64 = true
}

jib {
    from.image 'gcr.io/distroless/java:11'
    to{
        image = "omarsmak" + "/" + libraryName
        tags = [libraryVersion, "latest"]
        auth {
            username = System.getenv('DOCKERHUB_USER')
            password = System.getenv('DOCKERHUB_PASSWORD')
        }
    }
    container {
        ports = ["9739"]
        jvmFlags = [
                "-XX:+UseCompressedOops",
                "-XX:MaxRAMPercentage=80",
                "-Dfile.encoding=UTF-8",
                "-Djava.security.egd=file:/dev/./urandom"
        ]
    }
}